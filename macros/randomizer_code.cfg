### base palette vs new palette: color changer with loyal unit option

#define OBJECT_OF_COLORCHANGER BASECOLOR NEWCOLOR ID 
	[object]
		modification_scale_color_shift=yes
		modification_id={ID}
		silent=yes
		id=$unit.underlying_id
		duration=forever
		take_only_once=no
		[filter]
			find_in=unit
			x,y=$x1,$y1
		[/filter]
		
		[effect]
			apply_to=image_mod
			add=PAL({BASECOLOR} > {NEWCOLOR})
		[/effect]
	[/object]
	# For a visual trait, so I can see what color the unit is using
	## [modify_unit]
		## [filter]
			## find_in=unit
			## x,y=$x1,$y1
		## [/filter]
		## [trait]
			## id={ID}
			## name={ID}
		## [/trait]
	## [/modify_unit]
#enddef

#define MODIFICATION_COLORCHANGER_CODE BASECOLOR NEWCOLOR ID
	[if]
		[variable]
			name=modification_scale_randomizer_no_loyal
			equals=yes
		[/variable]
		[then]
			[if]
				[have_unit]
					trait=loyal
					x,y=$x1,$y1
					[or]
						x,y=$x1,$y1
						canrecruit=yes
					[/or]
				[/have_unit]
				[then]
				[/then]
				[else]
					{OBJECT_OF_COLORCHANGER {BASECOLOR} {NEWCOLOR} {ID}}
				[/else]
			[/if]
		[/then]
		[else]
			{OBJECT_OF_COLORCHANGER {BASECOLOR} {NEWCOLOR} {ID}}
		[/else]
	[/if]
#enddef

#################################################################################################
######## Default event if nothing is activated, randomizes the recruits in any color mix ########
#################################################################################################

#define THEN_RANDOM BASECASE
					[variable]
						name=random
						numerical_equals=1
					[/variable]
					[then]
						{BASECASE} #needs to be done, so that if we recall the unit, it stays green
					[/then]
#enddef

#define ELSEIF_RANDOM NUMBER OTHERCASE
					[elseif]
						[variable]
							name=random
							numerical_equals={NUMBER}
						[/variable]
						[then]
							{OTHERCASE}
						[/then]
					[/elseif]
#enddef

#define MODIFICATION_COLORCHANGER_RANDOMIZER WML_FILTER NUMBER_NO_MORPH NO_MORPH_LIST NUMBER_MORPH MORPH_LIST
    [elseif]

		{WML_FILTER}
		[then]
			[if]
				[variable]
					name=modification_scale_randomizer_morphing
					equals=no
				[/variable]
				[then]
					{RANDOM {NUMBER_NO_MORPH}}
					[if]
						{NO_MORPH_LIST}
					[/if]
				[/then]
				[else]
					{RANDOM {NUMBER_MORPH}}
					[if]
						{MORPH_LIST}
					[/if]
				[/else]
			[/if]
		[/then]
    [/elseif]
#enddef

### Advancement (if the advancements using a different set of pallets)

#define MODIFICATION_UCV_ADVANCEMENT POST_ADVANCEMENT BASECOLOR NEWCOLOR ID
    [elseif]
	
        [have_unit]
            {POST_ADVANCEMENT}
			[filter_wml]
				[modifications]
					[object]
						modification_id={ID}
					[/object]
				[/modifications]
			[/filter_wml]
        [/have_unit]
		[then]
			[remove_object]
				object_id=$unit.underlying_id
			[/remove_object]
			
			
			[object]
				modification_scale_color_shift=yes
				modification_id={ID}
				silent=yes
				id=$unit.underlying_id
				duration=forever
				take_only_once=no
				[filter]
					find_in=unit
					x,y=$x1,$y1
				[/filter]
				
				[effect]
					apply_to=image_mod
					replace=PAL({BASECOLOR} > {NEWCOLOR})
				[/effect]
			[/object]
		[/then]
    [/elseif]
#enddef

#define MODIFICATION_UCV_ADVANCEMENT_DYNAMIC POST_ADVANCEMENT BASECOLOR
    [elseif]

        [have_unit]
            {POST_ADVANCEMENT}
        [/have_unit]
		[then]	
			[remove_object]
				object_id=$unit.underlying_id
			[/remove_object]
			
			{VARIABLE wolfrider.advancement $unit.modifications.object.modification_id}
			
			[object]
				modification_scale_color_shift=yes
				modification_id=$unit.modifications.object.modification_id
				silent=yes
				id=$unit.underlying_id
				duration=forever
				take_only_once=no
				[filter]
					find_in=unit
					x,y=$x1,$y1
				[/filter]
				
				[effect]
					apply_to=image_mod
					replace=PAL({BASECOLOR} > "$wolfrider.advancement")
				[/effect]
			[/object]
		[/then]
    [/elseif]
#enddef